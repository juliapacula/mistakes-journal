@use 'sass:map';
@use '../mistakes-journal';

$button-variants: (
  'primary': (
    'regular': '700',
    'focus': '900',
    'hover': '900',
    'active': '500',
    'contrast': mistakes-journal.color('gray', '0')
  ),
  'secondary': (
    'regular': '700',
    'focus': '900',
    'hover': '900',
    'active': '500',
    'contrast': mistakes-journal.color('gray', '1000')
  ),
  'error': (
    'regular': '700',
    'focus': '900',
    'hover': '900',
    'active': '500',
    'contrast': mistakes-journal.color('gray', '0')
  ),
);

$button-outline-variants: (
  'gray': (
    'regular': '400',
    'focus': '600',
    'hover': '600',
    'active': '500',
  ),
  'primary': (
    'regular': '700',
    'focus': '900',
    'hover': '900',
    'active': '500',
  ),
  'secondary': (
    'regular': '700',
    'focus': '900',
    'hover': '900',
    'active': '500',
  ),
  'error': (
    'regular': '700',
    'focus': '900',
    'hover': '900',
    'active': '500',
  ),
  'repetition': (
    'regular': '700',
    'focus': '900',
    'hover': '900',
    'active': '500',
  ),
);

.btn {
  @each $variant, $states in $button-variants {
    &.btn-#{$variant} {
      background-color: mistakes-journal.color($variant, map.get($states, 'regular'));
      color: map.get($states, 'contrast');

      &:hover {
        background-color: mistakes-journal.color($variant, map.get($states, 'hover'));
        color: map.get($states, 'contrast');
      }

      .btn-check:focus + &,
      &:focus {
        background-color: mistakes-journal.color($variant, map.get($states, 'focus'));
        color: map.get($states, 'contrast');
      }

      .btn-check:checked + &,
      .btn-check:active + &,
      &:active,
      &.active,
      .show > &.dropdown-toggle {
        background-color: mistakes-journal.color($variant, map.get($states, 'active'));
        color: map.get($states, 'contrast');
      }
    }
  }

  @each $variant, $states in $button-outline-variants {
    &.btn-outline-#{$variant} {
      border-width: 0.125rem;
      border-color: mistakes-journal.color($variant, map.get($states, 'regular'));
      color: mistakes-journal.color($variant, map.get($states, 'regular'));

      &:hover {
        border-color: mistakes-journal.color($variant, map.get($states, 'hover'));
        background-color: mistakes-journal.color($variant, map.get($states, 'hover'));
        color: mistakes-journal.color('gray', '0');
      }

      &:focus {
        border-color: mistakes-journal.color($variant, map.get($states, 'focus'));
        background-color: mistakes-journal.color($variant, map.get($states, 'focus'));
        color: mistakes-journal.color('gray', '0');

      }

      &.active,
      &:active {
        border-color: mistakes-journal.color($variant, map.get($states, 'active'));
        background-color: mistakes-journal.color($variant, map.get($states, 'active'));
        color: mistakes-journal.color('gray', '0');
      }
    }
  }

  &.with-icon {
    display: inline-flex;
    align-items: center;
  }

  .btn-icon + .btn-text {
    margin-left: 0.5rem;
  }
}

.btn.btn-link {
  @include mistakes-journal.font-medium;
  color: mistakes-journal.$black;
  text-decoration: none;

  &.btn-primary {
    color: mistakes-journal.$white;
  }
}

.btn-sm {
  border-radius: 5rem;
}
